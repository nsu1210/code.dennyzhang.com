* Leetcode: Boats to Save People                                :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     twosum, greedy
:END:
---------------------------------------------------------------------
Boats to Save People
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/boats-to-save-people"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/followup-twosum][Series: TwoSum Problems & Follow-Up]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/followup-twosum][#twosum]], [[https://code.dennyzhang.com/review-greedy][#greedy]]
---------------------------------------------------------------------
The i-th person has weight people[i], and each boat can carry a maximum weight of limit.

Each boat carries at most 2 people at the same time, provided the sum of the weight of those people is at most limit.

Return the minimum number of boats to carry every given person.  (It is guaranteed each person can be carried by a boat.)

Example 1:
#+BEGIN_EXAMPLE
Input: people = [1,2], limit = 3
Output: 1
Explanation: 1 boat (1, 2)
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: people = [3,2,2,1], limit = 3
Output: 3
Explanation: 3 boats (1, 2), (2) and (3)
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: people = [3,5,3,4], limit = 5
Output: 4
Explanation: 4 boats (3), (3), (4), (5)
#+END_EXAMPLE

Note:

1. 1 <= people.length <= 50000
- 1 <= people[i] <= limit <= 30000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/boats-to-save-people][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/boats-to-save-people/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/boats-to-save-people
// Basic Ideas: greedy + two-sum-close
//
// Complexity: Time O(n*log(n)), Space O(1)
import (
    "sort"
)
func numRescueBoats(people []int, limit int) int {
    sort.Ints(people)
    res := 0
    l, r := 0, len(people)-1
    for l<=r {
        v := people[l]+people[r]
        if v <= limit {
            l, r = l+1, r-1
        } else {
            r -= 1
        }
        res++
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
