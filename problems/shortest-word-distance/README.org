* Leetcode: Shortest Word Distance                                              :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array, inspiring, classic, editdistance
:END:
---------------------------------------------------------------------
Shortest Word Distance
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-word-distance"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/followup-editdistance][Series: Edit Distance Of Two Strings & Follow-up]]
- [[https://code.dennyzhang.com/heaters][LeetCode: Heaters]]
- [[https://code.dennyzhang.com/shortest-word-distance-ii][LeetCode: Shortest Word Distance II]]
- [[https://code.dennyzhang.com/shortest-word-distance-iii][LeetCode: Shortest Word Distance III]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-array][#array]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]], [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/tag/editdistance][#editdistance]]
---------------------------------------------------------------------
Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
#+BEGIN_EXAMPLE
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = "coding", word2 = "practice", return 3.
Given word1 = "makes", word2 = "coding", return 1.
#+END_EXAMPLE

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/shortest-word-distance][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/shortest-word-distance/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/shortest-word-distance
// Basic Ideas: One pass
//
// Mininum distance between two items in a list
//
// From left to right, get distance of word1 and word2
//     Whenever we find a new word1 or word2, we update the corresponding index
//     Note it's O(n), instead of O(n*n)
//
// Complexity: Time O(n), Space O(1)
func shortestDistance(words []string, word1 string, word2 string) int {
    index1, index2 := -1, -1
    res := len(words)
    for i, word := range words {
        if word == word1 { index1 = i }
        if word == word2 { index2 = i }
        if index1 != -1 && index2 != -1 {
            distance := index1-index2
            if distance < 0 { distance = -distance }
            if distance<res { res = distance }
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
