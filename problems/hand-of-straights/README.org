* Leetcode: Hand of Straights                                    :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array, inspiring, redo
:END:
---------------------------------------------------------------------
Hand of Straights
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/hand-of-straights"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-array][#array]], [[https://code.dennyzhang.com/review-inspiring][#inspiring]]
---------------------------------------------------------------------
Alice has a hand of cards, given as an array of integers.

Now she wants to rearrange the cards into groups so that each group is size W, and consists of W consecutive cards.

Return true if and only if she can.

Example 1:
#+BEGIN_EXAMPLE
Input: hand = [1,2,3,6,2,3,4,7,8], W = 3
Output: true
Explanation: Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8].
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: hand = [1,2,3,4,5], W = 4
Output: false
Explanation: Alice's hand can't be rearranged into groups of 4.
#+END_EXAMPLE
 
Note:

1. 1 <= hand.length <= 10000
- 0 <= hand[i] <= 10^9
- 1 <= W <= hand.length

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/hand-of-straights][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/hand-of-straights/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/hand-of-straights
// Basic Ideas: hashmap + sort
// The start with the mininum items
// Complexity: Time O(n*log(n))), Space O(n)
func isNStraightHand(hand []int, W int) bool {
    m := map[int]int{}
    list := []int{}
    for _, v := range hand { m[v]++ }
    for key := range m { list = append(list, key) }
    sort.Ints(list)
    for _, v := range list {
        for m[v] != 0 {
            m[v]--
            // note: this step won't be O(n*W). It will be O(n) only
            for k:=1; k<W; k++ {
                // fmt.Println(v, k, m)
                if m[v+k] == 0 { return false }
                m[v+k]--
            }
        }
    }
    return true
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
