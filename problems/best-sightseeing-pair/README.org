* Leetcode: Best Sightseeing Pair                                :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     classic, array
:END:
---------------------------------------------------------------------
Best Sightseeing Pair
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-sightseeing-pair"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/tag/classic][#classic]], [[https://code.dennyzhang.com/review-array][#array]]
---------------------------------------------------------------------
Given an array A of positive integers, A[i] represents the value of the i-th sightseeing spot, and two sightseeing spots i and j have distance j - i between them.

The score of a pair (i < j) of sightseeing spots is (A[i] + A[j] + i - j) : the sum of the values of the sightseeing spots, minus the distance between them.

Return the maximum score of a pair of sightseeing spots.

Example 1:
#+BEGIN_EXAMPLE
Input: [8,1,5,2,6]
Output: 11
Explanation: i = 0, j = 2, A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11
#+END_EXAMPLE
 
Note:

1. 2 <= A.length <= 50000
- 1 <= A[i] <= 1000

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-sightseeing-pair][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/best-sightseeing-pair/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/best-sightseeing-pair
// Basic Ideas:
//    Compose two new arrays: l1 and l2
//    l1[i] = A[i]+i
//    l2[j] = A[j]-j
//    l1 is non decreasing array
// Complexity: Time O(n)), Space O(n)
func maxScoreSightseeingPair(A []int) int {
    l1, l2 := make([]int, len(A)), make([]int, len(A))
    for i, v := range A{
        l1[i], l2[i] = v+i, v-i
    }
    // result can't be smaller than 0
    res := 0
    maxA := l1[0]
    for i:=1; i<len(A); i++ {
        if res < maxA+l2[i] {
            res = maxA+l2[i]
        }
        if l1[i] > maxA {
            maxA = l1[i]
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
