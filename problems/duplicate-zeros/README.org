* Leetcode: Duplicate Zeros                                      :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     array, twopointer, inspiring, findduplicates
:END:
---------------------------------------------------------------------
Duplicate Zeros
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/duplicate-zeros"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-twopointer][#twopointer]], [[https://code.dennyzhang.com/review-array][#array]], [[https://code.dennyzhang.com/tag/inspiring][#inspiring]], [[https://code.dennyzhang.com/followup-findduplicates][#findduplicates]]
---------------------------------------------------------------------
Given a fixed length array arr of integers, duplicate each occurrence of zero, shifting the remaining elements to the right.

Note that elements beyond the length of the original array are not written.

Do the above modifications to the input array in place, do not return anything from your function.

Example 1:
#+BEGIN_EXAMPLE
Input: [1,0,2,3,0,4,5,0]
Output: null
Explanation: After calling your function, the input array is modified to: [1,0,0,2,3,0,0,4]
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [1,2,3]
Output: null
Explanation: After calling your function, the input array is modified to: [1,2,3]
#+END_EXAMPLE
 
Note:

1. 1 <= arr.length <= 10000
- 0 <= arr[i] <= 9

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/duplicate-zeros][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/duplicate-zeros/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/duplicate-zeros
// Basic Ideas: two pointer
//   Find how many cells can be shifted
//   From right to next, do the move
// Complexity: Time O(n), Space O(1)
func duplicateZeros(arr []int)  {
    count := 0
    for _, v := range arr {
        if v == 0 {
            count++
        }
    }
    i, j := len(arr)-1, len(arr)+count-1
    for ; i>=0 && j>=0; i, j = i-1, j-1 {
        if arr[i] != 0 {
            if j<len(arr) {
                arr[j] = arr[i]
            }
        } else {
            if j<len(arr) {
                arr[j] = 0
            }
            j--
            if j<len(arr) {
                arr[j] = 0
            }
        }
    }
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
