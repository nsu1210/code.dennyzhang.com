* Leetcode: Sum of Square Numbers                               :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     twopointer, math, sqrt, twosum, inspiring
:END:
---------------------------------------------------------------------
Sum of Square Numbers
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/sum-of-square-numbers"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/followup-twosum][Series: TwoSum Problems & Follow-Up]]
- [[https://code.dennyzhang.com/3sum-ii][LintCode: 3Sum II]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/review-twopointer][#twopointer]], [[https://code.dennyzhang.com/review-sqrt][#sqrt]], [[https://code.dennyzhang.com/followup-twosum][#twosum]]
---------------------------------------------------------------------
Given a non-negative integer c, your task is to decide whether there're two integers a and b such that a*a + b*b = c.
#+BEGIN_EXAMPLE
Example 1:
Input: 5
Output: True
Explanation: 1 * 1 + 2 * 2 = 5
#+END_EXAMPLE

#+BEGIN_EXAMPLE
Example 2:
Input: 3
Output: False
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/sum-of-square-numbers][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/sum-of-square-numbers/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------

#+BEGIN_SRC python
## https://code.dennyzhang.com/sum-of-square-numbers
## Basic Ideas: two pointer
##
##  We can assume a, b non-negative
##
##  0 ... a.. b ..c
##
## Complexity: Time ?, Space ?
class Solution:
    def judgeSquareSum(self, c: int) -> bool:
        left, right = 0, int(math.sqrt(c))
        while left<=right:
            v = left*left+right*right
            if v == c: return True
            if v>c:
                # make it smaller
                right -= 1
            else:
                left += 1
        return False
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
