* Leetcode: Best Time to Buy and Sell Stock II                  :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     greedy, buystock, array
:END:
---------------------------------------------------------------------
Best Time to Buy and Sell Stock II
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-time-to-buy-and-sell-stock"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://code.dennyzhang.com/stock-decision][LeetCode: Best Time to Buy and Sell Stock]]
- [[https://code.dennyzhang.com/stock-decision-ii][LeetCode: Best Time to Buy and Sell Stock II]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/followup-buystock][#buystock]], [[https://code.dennyzhang.com/review-array][#array]]
---------------------------------------------------------------------
Say you have an array for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).

Note: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).

Example 1:
#+BEGIN_EXAMPLE
Input: [7,1,5,3,6,4]
Output: 7
Explanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.
             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.
#+END_EXAMPLE
Example 2:
#+BEGIN_EXAMPLE
Input: [1,2,3,4,5]
Output: 4
Explanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.
             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are
             engaging multiple transactions at the same time. You must sell before buying again.
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: [7,6,4,3,1]
Output: 0
Explanation: In this case, no transaction is done, i.e. max profit = 0.
#+END_EXAMPLE

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/best-time-to-buy-and-sell-stock-ii][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/][leetcode.com]]

#+BEGIN_SRC go
// https://code.dennyzhang.com/best-time-to-buy-and-sell-stock-ii
// Basic Ideas: Greedy
//  Check adjacent days. If drop, skip. If rise, buy
// Complexity: Time O(n), Space O(1)
func maxProfit(prices []int) int {
    res := 0
    for i:=1; i<len(prices); i++ {
        if prices[i] > prices[i-1] {
            res += prices[i]-prices[i-1]
        }
    }
    return res
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
