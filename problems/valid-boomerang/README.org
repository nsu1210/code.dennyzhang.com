* Leetcode: Valid Boomerang                                      :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     math, triangle
:END:
---------------------------------------------------------------------
Valid Boomerang
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-boomerang"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-math][#math]], [[https://code.dennyzhang.com/followup-triangle][#triangle]]
---------------------------------------------------------------------
A boomerang is a set of 3 points that are all distinct and not in a straight line.

Given a list of three points in the plane, return whether these points are a boomerang.

Example 1:
#+BEGIN_EXAMPLE
Input: [[1,1],[2,3],[3,2]]
Output: true
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [[1,1],[2,2],[3,3]]
Output: false
#+END_EXAMPLE
 
Note:

1. points.length == 3
- points[i].length == 2
- 0 <= points[i][j] <= 100

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/valid-boomerang][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/valid-boomerang/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC go
// https://code.dennyzhang.com/valid-boomerang
// Basic Ideas: math
//    If not in the same line, these three points will be a triangle
//    Caculate the area of the triangle
// Complexity: Time O(1), Space O(1)
func isBoomerang(points [][]int) bool {
    return 2*(points[2][0]-points[0][0])*(points[1][1]-points[2][1]) != 
        (points[2][0]-points[0][0])*(points[0][1]-points[2][1]) + 
        (points[1][0]-points[0][0])*(points[1][1]-points[0][1]) + 
        (points[2][0]-points[1][0])*(points[1][1]-points[2][1])
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
