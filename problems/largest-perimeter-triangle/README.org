* Leetcode: Largest Perimeter Triangle                           :BLOG:Basic:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     greedy, triangle
:END:
---------------------------------------------------------------------
Largest Perimeter Triangle
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/largest-perimeter-triangle"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: Leetcode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-greedy][#greedy]], [[https://code.dennyzhang.com/followup-triangle][#triangle]]
---------------------------------------------------------------------
Given an array A of positive lengths, return the largest perimeter of a triangle with non-zero area, formed from 3 of these lengths.

If it is impossible to form any triangle of non-zero area, return 0.

Example 1:
#+BEGIN_EXAMPLE
Input: [2,1,2]
Output: 5
#+END_EXAMPLE

Example 2:
#+BEGIN_EXAMPLE
Input: [1,2,1]
Output: 0
#+END_EXAMPLE

Example 3:
#+BEGIN_EXAMPLE
Input: [3,2,3,4]
Output: 10
#+END_EXAMPLE

Example 4:
#+BEGIN_EXAMPLE
Input: [3,6,2,3]
Output: 8
#+END_EXAMPLE
 
Note:

- 3 <= A.length <= 10000
- 1 <= A[i] <= 10^6

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/largest-perimeter-triangle][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/largest-perimeter-triangle/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
#+BEGIN_SRC go
// https://code.dennyzhang.com/largest-perimeter-triangle
// Basic Ideas: Sort + Greedy
// Complexity: Time O(n*log(n)), Space O(1)
import "sort"
func largestPerimeter(A []int) int {
    sort.Ints(A)
    for i:=len(A)-1; i>=2; i-- {
        if A[i-2] + A[i-1] > A[i] {
            return A[i-2]+A[i-1]+A[i]
        }
    }
    return 0
}
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
